{"ast":null,"code":"var _jsxFileName = \"/Users/jeongsu-in/CRA/chackcheck-project/FE/src/pages/book.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport InfoTable from '../components/common/infoList/infoTable.jsx';\nimport Category from \"../components/common/Category.jsx\";\nimport Loading from '../components/common/Loading.jsx';\nimport Paging from '../components/common/pagination.jsx';\nimport Detail from '../components/common/Detail.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPage = styled.div`\n    \n\n    .category {\n      position: fixed;\n      /* background-color: aqua; */\n      height:100%;\n      float: left;\n      width: 12em;\n      margin-left: 2em;\n    }\n\n    .contents {\n      margin-top: 3em;\n      margin-left: 15em;\n    }\n    .infotable {\n      margin-top: 3em;\n    }\n    `;\n_c = StyledPage;\nfunction Book() {\n  _s();\n  const [tableLoading, setTableLoading] = useState(true);\n  const [info, setInfo] = useState([]);\n  const getInfo = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/info'); // 서버에서 데이터를 가져옴\n      const json = await response.json(); // 응답을 JSON으로 변환\n      setInfo(json); // 상태를 업데이트\n    } catch (error) {\n      console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n    } finally {\n      setTableLoading(false); // 로딩 상태를 false로 설정\n    }\n  };\n  useEffect(() => {\n    getInfo();\n  }, []);\n  console.log(info);\n  return /*#__PURE__*/_jsxDEV(StyledPage, {\n    className: \"book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\",\n        children: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotable\",\n        children: tableLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InfoTable, {\n          response: info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Book, \"xMF2O2RTMPTSgUhRMbYMjcbBnXs=\");\n_c2 = Book;\nexport default Book;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledPage\");\n$RefreshReg$(_c2, \"Book\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","styled","InfoTable","Category","Loading","Paging","Detail","jsxDEV","_jsxDEV","StyledPage","div","_c","Book","_s","tableLoading","setTableLoading","info","setInfo","getInfo","response","fetch","json","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jeongsu-in/CRA/chackcheck-project/FE/src/pages/book.jsx"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport InfoTable from '../components/common/infoList/infoTable.jsx'\n\nimport Category from \"../components/common/Category.jsx\"\nimport Loading from '../components/common/Loading.jsx';\nimport Paging from '../components/common/pagination.jsx';\nimport Detail from '../components/common/Detail.jsx'\n\n\nconst StyledPage = styled.div`\n    \n\n    .category {\n      position: fixed;\n      /* background-color: aqua; */\n      height:100%;\n      float: left;\n      width: 12em;\n      margin-left: 2em;\n    }\n\n    .contents {\n      margin-top: 3em;\n      margin-left: 15em;\n    }\n    .infotable {\n      margin-top: 3em;\n    }\n    `;\n\nfunction Book() {\n\n\n  const [tableLoading, setTableLoading] = useState(true);\n  const [info, setInfo] = useState([]);\n\n  const getInfo = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/info'); // 서버에서 데이터를 가져옴\n      const json = await response.json(); // 응답을 JSON으로 변환\n      setInfo(json); // 상태를 업데이트\n    } catch (error) {\n      console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n    } finally {\n      setTableLoading(false); // 로딩 상태를 false로 설정\n    }\n  };\n\n  useEffect(() => {\n    getInfo()\n  }, []);\n\n  console.log(info)\n\n  return (\n    <StyledPage className=\"book\">\n      <div className='category'>\n        <Category />\n      </div>\n      <div className='contents'>\n        <div className='detail'>\n          <Detail></Detail>\n        </div>\n        <div className=\"infotable\">\n          {tableLoading ?\n            <Loading /> :\n            <InfoTable response={info} />}\n        </div>\n      </div>\n\n\n    </StyledPage>\n  );\n}\n\n\n\nexport default Book;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}