{"ast":null,"code":"var _jsxFileName = \"/Users/jeongsu-in/CRA/chackcheck-project/FE/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Router, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './components/common/header/header.jsx';\nimport Category from './components/common/Category.jsx';\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Loading from './components/common/Loading.jsx';\nimport Paging from './components/common/pagination.jsx';\nimport Book from './pages/book.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const currentLocation = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [book, setBook] = useState([]);\n  const getBook = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/db'); // 서버에서 데이터를 가져옴\n      const json = await response.json(); // 응답을 JSON으로 변환\n      setBook(json); // 상태를 업데이트\n    } catch (error) {\n      console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n    } finally {\n      setLoading(false); // 로딩 상태를 false로 설정\n    }\n  };\n  useEffect(() => {\n    getBook();\n  }, []);\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentLocation.pathname !== '/users/login' && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 55\n    }, this), currentLocation.pathname.startsWith('/books') && /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books/:id\",\n        element: /*#__PURE__*/_jsxDEV(Book, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JWbQWM+lq7hgvkDGBPhDjwf1zNo=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","Router","useLocation","React","useState","useEffect","useParams","Header","Category","Main","Login","Loading","Paging","Book","jsxDEV","_jsxDEV","App","_s","currentLocation","loading","setLoading","book","setBook","getBook","response","fetch","json","error","console","params","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","path","element","_c","$RefreshReg$"],"sources":["/Users/jeongsu-in/CRA/chackcheck-project/FE/src/App.js"],"sourcesContent":["import { Routes, Route, Router, useLocation} from 'react-router-dom';\n\nimport './App.css';\n\nimport {React, useState , useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Header from './components/common/header/header.jsx';\nimport Category from './components/common/Category.jsx';\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Loading from './components/common/Loading.jsx';\nimport Paging from './components/common/pagination.jsx';\n\nimport Book from './pages/book.jsx'\nfunction App() {\n  const currentLocation = useLocation();\n\n  const [loading, setLoading] = useState(true);\n  const [book, setBook] = useState([]);\n\n\n  const getBook = async () => {\n    try {\n        const response = await fetch('http://localhost:3001/db'); // 서버에서 데이터를 가져옴\n        const json = await response.json(); // 응답을 JSON으로 변환\n        setBook(json); // 상태를 업데이트\n    } catch (error) {\n        console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n    } finally {\n        setLoading(false); // 로딩 상태를 false로 설정\n    }\n};\n\n\n  useEffect(() => {\n    getBook()\n  }, []);\n\n  const params = useParams();\n\n  return (\n    <div className=\"App\">\n      {currentLocation.pathname !== '/users/login' && <Header />}\n      {currentLocation.pathname.startsWith('/books') && <Category/>}\n      {/* {loading ?\n                <Loading/> :\n      <Paging response = {book}/> } */}\n\n      <Routes>\n        <Route path=\"/books\" element={<Main/>}/>\n        <Route path=\"/users/login\" element={<Login/>}/>\n        <Route path=\"/books/:id\" element={<Book/>}></Route>\n      </Routes>\n\n      \n    </div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAO,kBAAkB;AAEpE,OAAO,WAAW;AAElB,SAAQC,KAAK,EAAEC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,MAAM,MAAM,oCAAoC;AAEvD,OAAOC,IAAI,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,eAAe,GAAGhB,WAAW,CAAC,CAAC;EAErC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMmB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCJ,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACpD,CAAC,SAAS;MACNP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAGCf,SAAS,CAAC,MAAM;IACdkB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,MAAM,GAAGvB,SAAS,CAAC,CAAC;EAE1B,oBACES,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBb,eAAe,CAACc,QAAQ,KAAK,cAAc,iBAAIjB,OAAA,CAACR,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDlB,eAAe,CAACc,QAAQ,CAACK,UAAU,CAAC,QAAQ,CAAC,iBAAItB,OAAA,CAACP,QAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAK7DrB,OAAA,CAAChB,MAAM;MAAAgC,QAAA,gBACLhB,OAAA,CAACf,KAAK;QAACsC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAExB,OAAA,CAACN,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxCrB,OAAA,CAACf,KAAK;QAACsC,IAAI,EAAC,cAAc;QAACC,OAAO,eAAExB,OAAA,CAACL,KAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/CrB,OAAA,CAACf,KAAK;QAACsC,IAAI,EAAC,YAAY;QAACC,OAAO,eAAExB,OAAA,CAACF,IAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGN,CAAC;AAEV;AAACnB,EAAA,CA3CQD,GAAG;EAAA,QACcd,WAAW,EAuBpBI,SAAS;AAAA;AAAAkC,EAAA,GAxBjBxB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}