{"ast":null,"code":"var _jsxFileName = \"/Users/jeongsu-in/CRA/chackcheck-project/FE/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Router, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './components/common/header/header.jsx';\nimport Category from './components/common/Category.jsx';\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Loading from './components/common/Loading.jsx';\n//import Paging from './components/common/pagination.jsx';\n\nimport Book from './pages/book.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const currentLocation = useLocation();\n\n  //const [loading, setLoading] = useState(true);\n  //const [book, setBook] = useState([]);\n\n  //const getBook = async () => {\n  //try {\n  // const response = await fetch('http://localhost:3001/db'); // 서버에서 데이터를 가져옴\n  //const json = await response.json(); // 응답을 JSON으로 변환\n  //setBook(json); // 상태를 업데이트\n  //  } catch (error) {\n  //      console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n  //  } finally {\n  //    setLoading(false); // 로딩 상태를 false로 설정\n  // }\n  //};\n\n  //useEffect(() => {\n  //  getBook()\n  //}, []);\n\n  //const params = useParams();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentLocation.pathname !== '/users/login' && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 55\n    }, this), currentLocation.pathname.startsWith('/books') && /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q3jFeklrCyC3JQ0wS9qJRmimQ4s=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","Router","useLocation","React","useState","useEffect","useParams","Header","Category","Main","Login","Loading","Book","jsxDEV","_jsxDEV","App","_s","currentLocation","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","path","element","_c","$RefreshReg$"],"sources":["/Users/jeongsu-in/CRA/chackcheck-project/FE/src/App.js"],"sourcesContent":["import { Routes, Route, Router, useLocation} from 'react-router-dom';\n\nimport './App.css';\n\nimport {React, useState , useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Header from './components/common/header/header.jsx';\nimport Category from './components/common/Category.jsx';\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Loading from './components/common/Loading.jsx';\n//import Paging from './components/common/pagination.jsx';\n\nimport Book from './pages/book.jsx';\n\nfunction App() {\n  const currentLocation = useLocation();\n\n  //const [loading, setLoading] = useState(true);\n  //const [book, setBook] = useState([]);\n\n\n  //const getBook = async () => {\n    //try {\n       // const response = await fetch('http://localhost:3001/db'); // 서버에서 데이터를 가져옴\n        //const json = await response.json(); // 응답을 JSON으로 변환\n        //setBook(json); // 상태를 업데이트\n  //  } catch (error) {\n  //      console.error('Fetching books failed:', error); // 오류가 발생한 경우 콘솔에 오류 메시지 출력\n  //  } finally {\n    //    setLoading(false); // 로딩 상태를 false로 설정\n   // }\n//};\n\n\n  //useEffect(() => {\n  //  getBook()\n  //}, []);\n\n    //const params = useParams();\n\n  return (\n    <div className=\"App\">\n      {currentLocation.pathname !== '/users/login' && <Header />}\n      {currentLocation.pathname.startsWith('/books') && <Category/>}\n      {/* {loading ?\n                <Loading/> :\n      <Paging response = {book}/> } */}\n\n      <Routes>\n        <Route path=\"/books\" element={<Main/>}/>\n        <Route path=\"/users/login\" element={<Login/>}/>\n        {/*<Route path=\"/books/:id\" element={<Book/>}></Route>*/}\n      </Routes>\n\n      \n    </div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAO,kBAAkB;AAEpE,OAAO,WAAW;AAElB,SAAQC,KAAK,EAAEC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iCAAiC;AACrD;;AAEA,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,eAAe,GAAGf,WAAW,CAAC,CAAC;;EAErC;EACA;;EAGA;EACE;EACG;EACC;EACA;EACN;EACA;EACA;EACE;EACD;EACH;;EAGE;EACA;EACA;;EAEE;;EAEF,oBACEY,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBF,eAAe,CAACG,QAAQ,KAAK,cAAc,iBAAIN,OAAA,CAACP,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDP,eAAe,CAACG,QAAQ,CAACK,UAAU,CAAC,QAAQ,CAAC,iBAAIX,OAAA,CAACN,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAK7DV,OAAA,CAACf,MAAM;MAAAoB,QAAA,gBACLL,OAAA,CAACd,KAAK;QAAC0B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEb,OAAA,CAACL,IAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxCV,OAAA,CAACd,KAAK;QAAC0B,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEb,OAAA,CAACJ,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGN,CAAC;AAEV;AAACR,EAAA,CA3CQD,GAAG;EAAA,QACcb,WAAW;AAAA;AAAA0B,EAAA,GAD5Bb,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}